#pragma once
#include <Arduino.h>
#include <ArduinoSTL.h>
#include <functional>

void test1() {}

class ButtonHandler {
public:
  int pin;
  void *handlePressed;
  void *handleReleased;
  ButtonHandler() {}

private:
  std::vector<byte> pins;
  std::vector<bool> states;
  std::vector<void *> pressHandlers;
  std::vector<void *> releaseHandlers;

public:
  void registerButton(int _pin,
                      std::function<void()> _handlePressed,
                      std::function<void()> _handleReleased)
  {
    pins.push_back(_pin);
    pressHandlers.push_back(_handlePressed);
    releaseHandlers.push_back(_handleReleased);
  }

  void update() {
    const int buttonCount = pins.size();

    for (int i = 0; i < buttonCount; i++) {
      byte pin = pins.at(i);
      bool currentState = digitalRead(pin);

      if (currentState != states.at(i)) {
        // if (currentState) (&pressHandlers.at(i))();
        // else (&releaseHandlers.at(i))();
        pins.at(i) = currentState;
      }

      // states.at(i) = digitalRead(pins.at(i));
    }

    // if (currentState1 != buttonState1) {
    //   if (currentState1)
    //     handleButtonPressed1();
    //   else
    //     handleButtonReleased1();
    // }

    // buttonState1 = currentState1;
  }
};
